trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: 'JWT.sln'
  buildConfiguration: 'Release'
  buildPlatform: 'Any CPU'
  coreVersion: '2.2.x'
  nugetVersion: '5.2.0'

steps:
- task: DotNetCoreInstaller@1
  displayName: Install .NET Core v$(coreVersion)
  inputs:
      version: $(coreVersion)

- task: DotNetCoreCLI@2
  displayName: Restore NuGet packages for .NET Core
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- task: NuGetToolInstaller@1
  displayName: 'Install NuGet'

- task: NuGetCommand@2
  displayName: Restore NuGet packages for .NET Framework
  inputs:
    command: 'restore'
    restoreSolution: $(solution)

- task: DotNetCoreCLI@2
  displayName: Build solution
  inputs:
    command: 'build'
    projects: '$(solution)'
    arguments: '-c $(buildConfiguration) --no-restore'

- task: DotNetCoreCLI@2
  displayName: Run .NET Core tests
  inputs:
    command: 'test'
    projects: 'tests/**/JWT.Tests.Core.csproj'
    arguments: ' -c $(buildConfiguration) --no-build --no-restore'
    testRunner: 'VSTest'
    testResultsFiles: '**/*.trx'
    testResultsFormat: 'VSTest'
    failTaskOnFailedTests: true

- task: DotNetCoreCLI@2
  displayName: Run .NET Framework tests
  inputs:
    command: 'test'
    projects: 'tests/**/JWT.Tests.NetFramework.csproj'
    arguments: ' -c $(buildConfiguration) --no-build --no-restore'
    testRunner: 'VSTest'
    testResultsFiles: '**/*.trx'
    testResultsFormat: 'VSTest'
    failTaskOnFailedTests: true

- task: DotNetCoreCLI@2
  displayName: Package NuGet package
  inputs:
    command: pack
    packagesToPack: 'src/**/*.csproj'
    configuration: $(BuildConfiguration)
    nobuild: true

- task: PublishBuildArtifacts@1
  displayName: Publish build artifacts
